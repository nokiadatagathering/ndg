<?xml version="1.0" encoding="utf-8"?>

<!--
*  Nokia Data Gathering
*
*  Copyright (C) 2011 Nokia Corporation
*
*  This program is free software; you can redistribute it and/or
*  modify it under the terms of the GNU Lesser General Public
*  License as published by the Free Software Foundation; either
*  version 2.1 of the License, or (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*  Lesser General Public License for more details.
*
*  You should have received a copy of the GNU Lesser General Public License
*  along with this program.  If not, see <http://www.gnu.org/licenses/
-->

<mx:Module xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="init()"
	width="956" height="460" styleName="mainAreaModule"
	xmlns:comp="main.br.org.indt.ndg.ui.component.powerdatagrid.*"
	xmlns:render="main.br.org.indt.ndg.ui.component.renderes.*">

	<fx:Script>
		<![CDATA[
			import main.br.org.indt.ndg.controller.access.SessionClass;
		]]>
	</fx:Script>

	<fx:Script source="../../../controller/main/ResultListController.as" />

    <fx:Declarations>
    	<mx:WipeUp id="image_addedEffect" startDelay="100" />
        <mx:Parallel id="image_removedEffect">
            <mx:Zoom />
            <mx:Fade />
        </mx:Parallel>
    </fx:Declarations>

	<mx:HBox width="100%" styleName="functionalitiesBar" verticalAlign="bottom">
		<mx:Button height="43" width="63" click="showSurveys(event)"
			label="{ConfigI18n.getInstance().getString('btnDetailsBack')}">
			<mx:icon>@Embed(source='../../../../../../../resources/images/SETA_BACK_TRANSP.png')</mx:icon>
		</mx:Button>
		<mx:VBox verticalAlign="middle" verticalGap="0">
			<mx:HBox verticalAlign="middle" horizontalGap="4">
				<mx:Label text="{ConfigI18n.getInstance().getString('lblResultsSurveyTitle')}" styleName="darkTitle"/>
				<s:Label id="surveyTitle" styleName="darkTitle" maxWidth="220"/>
			</mx:HBox>
			<mx:HBox verticalAlign="middle" horizontalGap="2">
				<mx:Button label="{ConfigI18n.getInstance().getString('btnResultsMap')}" height="22" id="btnMap" width="80"
					click="showMap()" enabled="{pagination.selectedAllItems.length >= 1}"/>
				<mx:Button label="{ConfigI18n.getInstance().getString('btnResultsMapAll')}" height="22" id="btnMapAll" width="80"
					click="showMapAll()"/>
                                <mx:Button label="{ConfigI18n.getInstance().getString('btnResultsExport')}" height="22" id="btnExportSelected"
                                        click="export(true)" enabled="{pagination.selectedAllItems.length >= 1}" width="80"/>
                                <mx:Button label="{ConfigI18n.getInstance().getString('btnResultsExportAll')}" height="22" id="btnExport"
                                        click="export(false)" width="80"/>
				<mx:Button label="{ConfigI18n.getInstance().getString('btnResultsImport')}" height="22" id="btnImport"
					click="showImport()" width="80" visible="{!SessionClass.getInstance().isHostedMode}"/>
			</mx:HBox>
		</mx:VBox>

		<mx:HRule width="100%" visible="false"/>
		<comp:PowerSearch id="search" optionsLabels="{searchOptionsLabels}" optionsFields="{searchOptionsFields}"
			searchLabel="{ConfigI18n.getInstance().getString('lblSearch')}"/>
	</mx:HBox>

	<mx:HBox width="100%" height="100%" horizontalGap="2">
		<mx:VBox width="100%" height="100%" styleName="gridPanel">
			<mx:DataGrid id="resultsGrid" dataProvider="{resultList}" height="100%" change="showPreview(event)"
					itemClick="pagination.itemClick(resultsGrid.selectedItem)">
				<mx:columns>
					<render:CheckBoxHeaderColumn dataField="selected"
						id="customCheck" width="25" sortable="false"
						headerRenderer="main.br.org.indt.ndg.ui.component.renderes.CheckBoxRenderer"
						itemRenderer="main.br.org.indt.ndg.ui.component.renderes.CheckBoxRenderer" />
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colResultId')}" dataField="idResult" width="70">
                        <mx:itemRenderer>
                            <fx:Component>
                                <!--two label renderer -->
                                <s:MXDataGridItemRenderer height="19">
                                    <s:states>
                                        <s:State name="normal" />            
                                        <s:State name="hovered" />
                                        <s:State name="selected" />
                                    </s:states>
                                    <s:HGroup left="6" right="0" verticalCenter="0">
                                        <s:Label text="{data.idResult}" />
                                    </s:HGroup>
                                </s:MXDataGridItemRenderer>
                            </fx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colResultTitle')}" dataField="title" width="200">
                        <mx:itemRenderer>
                            <fx:Component>
                                <!--two label renderer -->
                                <s:MXDataGridItemRenderer height="19">
                                    <s:states>
                                        <s:State name="normal" />            
                                        <s:State name="hovered" />
                                        <s:State name="selected" />
                                    </s:states>
                                    <s:HGroup left="6" right="0" verticalCenter="0">
                                        <s:Label text="{data.title}" />
                                    </s:HGroup>
                                </s:MXDataGridItemRenderer>
                            </fx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colDate')}" dataField="date" width="80">
                        <mx:itemRenderer>
                            <fx:Component>
                                <!--two label renderer -->
                                <s:MXDataGridItemRenderer height="19">
                                    <s:states>
                                        <s:State name="normal" />            
                                        <s:State name="hovered" />
                                        <s:State name="selected" />
                                    </s:states>
                                    <s:HGroup left="6" right="0" verticalCenter="0">
                                        <s:Label text="{data.date}" />
                                    </s:HGroup>
                                </s:MXDataGridItemRenderer>
                            </fx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colUser')}" dataField="user" width="115">
                        <mx:itemRenderer>
                            <fx:Component>
                                <!--two label renderer -->
                                <s:MXDataGridItemRenderer height="19">
                                    <s:states>
                                        <s:State name="normal" />            
                                        <s:State name="hovered" />
                                        <s:State name="selected" />
                                    </s:states>
                                    <s:HGroup left="6" right="0" verticalCenter="0">
                                        <s:Label text="{data.user}" />
                                    </s:HGroup>
                                </s:MXDataGridItemRenderer>
                            </fx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colImei')}" dataField="imei" width="130">
                        <mx:itemRenderer>
                            <fx:Component>
                                <!--two label renderer -->
                                <s:MXDataGridItemRenderer height="19">
                                    <s:states>
                                        <s:State name="normal" />            
                                        <s:State name="hovered" />
                                        <s:State name="selected" />
                                    </s:states>
                                    <s:HGroup left="6" right="0" verticalCenter="0">
                                        <s:Label text="{data.imei}" />
                                    </s:HGroup>
                                </s:MXDataGridItemRenderer>
                            </fx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ConfigI18n.getInstance().getString('colLocation')}"
						dataField="" sortable="false" width="84">
						<mx:itemRenderer>
							<fx:Component>
								<mx:VBox width="100%" horizontalAlign="center">
									<mx:Image source="@Embed('../../../../../../../resources/images/MAP_STATUS_OK.png')" mouseEnabled="true" buttonMode="true"
										visible="{data.lat != 0 || data.lon != 0}" toolTip="[{data.lat},{data.lon}]"/>
								</mx:VBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
			<comp:PowerDataPagination dataProvider="{resultList}" remoteObject="{remoteListResults}"
				grid="{resultsGrid}" search="{search}"
				changePage="listResults(event)" pageSize="{RESULT_PAGE_SIZE}" checkable="true" id="pagination"
				pageLabel="{ConfigI18n.getInstance().getString('pcPageLabel')}"
				ofLabel="{ConfigI18n.getInstance().getString('pcOfLabel')}"
				refreshLabel="{ConfigI18n.getInstance().getString('pcRefreshLabel')}"
				itemsLabel="{ConfigI18n.getInstance().getString('pcItemsLabel')}"
				selectedItemsLabel="{ConfigI18n.getInstance().getString('pcSelectedItemsLabel')}"/>
		</mx:VBox>

		<mx:VBox width="250" height="100%" borderStyle="none" verticalGap="1">
			<mx:ApplicationControlBar height="23" width="100%" styleName="previewCtrlBar">
				<mx:Label text="{ConfigI18n.getInstance().getString('lblPreviewPanel')}" styleName="clearText" fontWeight="bold"/>
			</mx:ApplicationControlBar>
			<mx:VBox width="100%" height="380" id="preview" styleName="previewArea" verticalScrollPolicy="auto"/>
		</mx:VBox>
	</mx:HBox>

</mx:Module>
